@model IEnumerable<Hotel_Reservation_Menager.Models.Rooms>
@using System.Security.Claims;


@{
    ViewData["Title"] = "Rooms";
}

<h1>Rooms</h1>

@if (ViewBag.UserId == 1)
{
    <p>
        @Html.ActionLink("Create New", "Create", "Rooms", null, new { @class = "btn btn-success" })
    </p>
}


<p>
    @using (Html.BeginForm("Index", "Rooms", FormMethod.Get))
    {
        <div class="form-group row">
            <div class="col-md-4">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search by type" })
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    }
</p>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                 <th>
                    @Html.DisplayNameFor(model => model.Number)
                </th>
                <th>
                    @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Capacity)
                    @Html.ActionLink("▲", "Index", new { sortOrder = "capacity", currentFilter = ViewBag.CurrentFilter })
                    @Html.ActionLink("▼", "Index", new { sortOrder = "capacity_desc", currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PricePerAdult)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PricePerChild)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsAvailable)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Capacity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PricePerAdult)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PricePerChild)
                    </td>
                    <td>
                        @if (item.IsAvailable)
                        {
                            <span class="badge badge-success">Available</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Not available</span>
                        }
                    </td>
                    
                        <td>
                             <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                            
                           @if(ViewBag.UserId == 1)
                            { 
                             <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                             }
                        </td>
                   
                </tr>
            }
        </tbody>
    </table>
</div>

@if (ViewBag.Pager != null && ViewBag.Pager.TotalPages > 1)
{
    <nav>
        <ul class="pagination">
            @if (ViewBag.Pager.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pg = ViewBag.Pager.CurrentPage - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })">«</a>
                </li>
            }
            @for (int i = 1; i <= ViewBag.Pager.TotalPages; i++)
            {
                if (i == ViewBag.Pager.CurrentPage)
                {
                    <li class="page-item active">
                        <a class="page-link">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pg = i, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })">@i</a>
                    </li>

            }
        }
        @if (ViewBag.Pager.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pg = ViewBag.Pager.CurrentPage + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })">»</a>
            </li>
        }
    </ul>
</nav>
}